<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BT_DeleteContact.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Mfw/Q1H+B7MDvcz3KUv1AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="PB_ContactPhoto.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAswB57/A9tVRLkTLgYUwAAAABJRU5ErkJggg==
</value>
  </data>
</root>